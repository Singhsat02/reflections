How did viewing a diff between two versions of a file help you see the bug that was introduced?
It helped show where changes were made.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
It would make it easier to find mistakes.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

Pros: you can commit when you need to and not have to many commits that are not needed, creating clutter.
Cons: you can forget to commit and lose your data.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Not needed in google docs because documents dont need to be connected together oftne. Git needs multiple files saved together because its common for programs/apps to have multiple files 
connected together.

How can you use the commands git log and git diff to view the history of files?
Git log gives a log of the changes made with comments.
git diff allows for one to check the difference between commits

How might using version control make you more confident to make changes that could break something?
Version control allows me to go back to a previous version so if anyhting goes wrong I dont have to worry that my work is lost or time will be wasted.

Now that you have your workspace set up, what do you want to try using Git for?
Make my first simple program and link it to git